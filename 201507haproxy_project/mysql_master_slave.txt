MySQL 主从实验

平台:Mac
工具:Vagrant
系统:CentOS6.5
实验目的:MySQL主从

主库服务器IP: 192.168.31.178
从库服务器IP: 192.168.31.176

实现思路:
  主库打开binlog, 设置server-id, 给从库创建一个帐号用来同步
  从库配置主库的ip, 端口, 用户名密码, 日志名和位置, 然后开始slave;

  详细步骤:
  1. 主库打开bin-log, 设置server-id
  2. 主库建立同步时的用户
  3. 重启服务, 查看master状态并记录上

  4. 导出数据, 拷贝到从库

  5. 从库导入数据
  6. 设置server-id
  7. 重启服务
  8. 设置主库信息
  9. 开启slave
  10. 查看从库状态

先打包一个安装了mysql服务的CentOS6.5的box 名字叫sentos6.5mysql
yum安装mysql
yum -y install mysql-server

设置开机启动
chkconfig mysqld on

启动mysql服务
service mysqld start

设置mysql的root用户密码
mysql -u root
select user,host,password from mysql.user;
set password for root@localhost=password('root');
exit

用新密码登录
mysql -u root -p

开放远程登录权限
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'root' WITH GRANT OPTION;
FLUSH PRIVILEGES;

最后打包命令
sudo rm -rf /etc/udev/rules.d/70-persistent-net.rules
vagrant package --output sentos6.5mysql.box
vagrant box add --name sentos6.5mysql sentos6.5mysql.box

下面基于这个box开始做实验

mkdir mysql_master_slave
cd mysql_master_slave
vagrant init sentos6.5mysql
vim Vagrantfile

定义一主一从
 config.vm.define "mysqlmaster" do |mysqlmaster|
    mysqlmaster.vm.network "public_network", ip:"192.168.31.178"
    mysqlmaster.vm.hostname = "mysqlmaster"
  end

  config.vm.define "mysqlslave1" do |mysqlslave1|
    mysqlslave1.vm.network "public_network", ip:"192.168.31.176"
    mysqlslave1.vm.hostname = "mysqlslave1"
  end

vagrant up

配置主库
vagrant ssh mysqlmaster

sudo su -
vi /etc/my.cnf
在mysqld模块下面添加打开binlog, 设置server-id

log-bin=mysql-bin 
#打开binlog
server-id=1
#确保id是唯一的即可

mysql -uroot -proot

grant replication slave on *.* to 'rep'@'192.168.31.176' identified by 'admin123';
创建一个授权slave用户rep, 密码为admin123, ip允许来自192.168.31.176, 10.0.0.% 表示局域网

flush privileges;
刷新mysql的系统权限相关表

exit;

service mysqld restart

检查是否开启成功
查看数据目录下面有没有binlog日志文件, 有则生效了, 有mysql-bin.index 和 000001 
或者到里面去查看 show variables like “log_bin”;
看到是on则开了

mysql -uroot -proot

show master status; 
记录两个值, 在从库设置同步的时候需要使用
File是mysql-bin.000001
Position 是 106



导出数据
mysqldump -uroot -proot -A -B -x --events --master-data=2 > /var/rep.sql
-x 是自动锁
导出完了打开 /var/rep.sql
搜索MASTER看一下MASTER_LOG_FILE 和 master_log_pos和之前show master status 是否一致


拷贝到从库服务器
scp /var/rep.sql vagrant@192.168.31.176:/vagrant

从库配置

vagrant ssh mysqlslave1
sudo su -

从库导入数据
mysql -uroot -proot < /vagrant/rep.sql

设置server-id
vi /etc/my.cnf
server-id=2
#id唯一即可

service mysqld restart

mysql -uroot -proot

CHANGE MASTER TO 
MASTER_HOST='192.168.31.178',
MASTER_PORT=3306,
MASTER_USER='rep',
MASTER_PASSWORD='admin123',
MASTER_LOG_FILE='mysql-bin.000001', 
MASTER_LOG_POS=106;

start slave;

show slave status\G;

Slave_IO_Running: Yes
Slave_SQL_Running: Yes


看到io和sql都为yes则成功了
如果上面两个线程开启,则表示主从同步配置成功,可以在主库上执行一些写操作,看是否会同步到从库

同步成功后会生成masterinfo, 在my.cnf里面找到data目录是在/var/lib/mysql里面
ls /var/lib/mysql 看到有一个master.info文件
cat /var/lib/mysql/master.info 可以看到设置的主库信息


测试
在主库 create database maxwelldu;
在从库 show databases; 

查看到有则主主从配置ok

相关链接:
http://blog.csdn.net/hguisu/article/details/7325124
http://www.cnblogs.com/zgx/archive/2011/09/13/2174823.html
http://www.cnblogs.com/lben/archive/2012/11/19/2777632.html


相关原理文本记录:

主库必须开启bin-log
从库找主库同步, change master  主机 用户 密码 端口 log_file log_pos
开始同步

从库的io线程向主库的io发送请求, 主库io验证用户是否合法, 从库连接的时候会告诉主库, 我要从你的哪个文件, 哪个点开始发binlog, 发多少, 一直发到最新的, 从库收到log日志, 将log写到中继日志, 然后会更新masterinfo 的位置点, 然后如此循环

sql线程实时的将中继log读取然后往数据库里面写, 只要发现中继日志有变化就读取然后写入

同步之前要先把主库的数据同步到从库上

在开启同步之前要确定在同步的位置以前, 从库是要有完整数据, 是一致的

在开启之前要在主库建立专门用于从库同步的帐号
主库要打开binlog开关

从库打开开关的过程实际上就是让io和sql都工作
