本地LNMP+Redis+Memcache+Mongodb环境box制作, 整个过程开启VPN速度会比较快
在本教程之前先要学会使用Vagrant
https://github.com/maxwelldu/shareResource/blob/master/20150711_vagrant.md
最后打包的box在百度网盘的地址: http://yun.baidu.com/s/1kTCclZh
或者在atlas上面下载: https://atlas.hashicorp.com/maxwelldu/boxes/centos65lnmprmmyii2/versions/1/providers/virtualbox.box

1.初始化一个镜像
2.安装Vim7.2.411, Git1.7.1,gcc包, unzip
3.安装PHP5.4.42
4.安装MySQL5.6.25
5.安装Nginx1.8.0
6.安装phpMyAdmin管理工具
7.安装Memcached1.4.24
8.安装Memcached扩展
  PHP操作Memcache测试脚本
9.安装phpMemcacheAdmin管理工具
10.安装Redis3.0.2
11.安装Redis扩展2.2.5
  PHP操作Redis测试脚本
12.安装phpredisadmin管理工具
13.安装Mongodb2.6.10
14.安装Mongodb扩展
15.安装phpmoadmin管理工具
16.安装Composer
17.安装Yii2
18.打包
19.使用
20.分享到网上

#1.初始化centos6.5镜像
vagrant init centos6.5
#打开域局网
vim Vagrantfile
```
config.vm.network "public_network"
```
vagrant up
#选1, eth0: Wi-Fi (AirPort)

#2.安装Vim, Git, gcc等开发工具, libevent-devel是memcache需要, tcl是redis需要
vagrant ssh
sudo su -
yum -y install vim git gcc gcc+ gcc-c++ unzip, libevent-devel zlib-devel tcl 

#更新MySQL的yum源和php的yum源
#到这个网站下载redhat linux6的rpm, 需要使用帐号登录来获取下载地址
#http://dev.mysql.com/downloads/repo/yum/
#获取完了之后下载
mkdir software
cd software
wget http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
yum -y localinstall mysql-community-release-el6-5.noarch.rpm
rpm -Uvh http://repo.webtatic.com/yum/el6/latest.rpm   
#关闭防火墙
service iptables stop
chkconfig iptables off

#3.安装PHP5.4.42
yum search php
yum -y install php54w php54w-fpm php54w-gd php54w-intl php54w-mbstring php54w-mcrypt php54w-mysql php54w-pdo php54w-xml php54w-xmlrpc php54w-pear php54w-devel
chkconfig php-fpm on
vim /etc/php-fpm.d/www.conf
#修改用户和用户组
```
user = vagrant
group = vagrant
```
php -v
service php-fpm start

#4.安装MySQL5.6.25
yum search mysql
yum -y install mysql mysql-devel mysql-server php54w-mysql 
service mysqld start
/usr/bin/mysqladmin -u root password 'root'
mysql -uroot -proot
use mysql
select Host, User, Password from user;
update user set Password=password('root');
update user set Host='%' where User='root' And Host='127.0.0.1';
flush privileges;
exit;
service mysqld restart
chkconfig mysqld on
vi ~/.my.cnf
```
[mysql] 
user=root 
password=root
```
#后面直接输入以下命令就登录MySQL了, 而不需要 mysql -uroot -proot
mysql
#或者
mysql -A 

#5.安装Nginx1.8.0
yum search nginx
yum -y install nginx
#如果这里安装不成功的话, 添加下面的内容, 换一个源, 接着继续yum -y install nginx
vi /etc/yum.repo.d/nginx.repo 
```
[nginx] 
name=nginx repo 
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/ 
gpgcheck=0 
enabled=1
```
ifconfig
#192.168.31.133  #查看本地ip是192.168.31.133, 后面的IP地址都使用这个
mkdir -p /data/www
mkdir -p /data/log/nginx/access
touch /data/log/nginx/access/index.log
echo 'hello html' > /data/www/index.html
vi /etc/nginx/conf.d/default.conf
```
server {
        listen  80 default;
        server_name 192.168.31.133;
        index index.html index.htm index.php;
        root /data/www;
        sendfile off;
        access_log /data/log/nginx/access/index.log;

        location ~ .*\.(php|php5)?$
        {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi.conf;
        }

        location / {
                if (!-e $request_filename) {
                        rewrite ^/(.*)/index.php last;
                }
        }
}
```
#检查语法, 语法没问题再继续, 有问题的话先找问题
nginx -t
vi /data/www/phpinfo.php
```
<?php
phpinfo();
```
service nginx start
chkconfig nginx on
service php-fpm restart
chkconfig php-fpm on
#访问 http://192.168.31.133/phpinfo.php 

#6.安装phpMyAdmin管理工具
wget --no-check-certificate https://files.phpmyadmin.net/phpMyAdmin/4.4.11/phpMyAdmin-4.4.11-all-languages.zip
unzip phpMyAdmin-4.4.11-all-languages.zip
mv phpMyAdmin-4.4.11-all-languages phpMyAdmin
mv phpMyAdmin /data/www
chown vagrant:vagrant /var/lib/php/session
cd /data/www/phpMyAdmin/
cp config.sample.inc.php config.inc.php
vim config.inc.php
```
$cfg['blowfish_secret'] = 'maxwelldu';
```
cd -
#访问地址: http://192.168.31.99/phpMyAdmin

#7.安装Memcached
wget http://www.memcached.org/files/memcached-1.4.24.tar.gz
tar -zxvf memcached-1.4.24.tar.gz
cd memcached-1.4.24
./configure --prefix=/usr/local/memcache  
make && make install
cp scripts/memcached.sysv /etc/init.d/memcached
vim /etc/init.d/memcached
```
chown $USER /usr/local/memcache/bin/memcached
    daemon /usr/local/memcache/bin/memcached -d -p $PORT -u $USER  -m $CACHESIZE -c $MAXCONN -P /var/run/memcached/memcached.pid $OPTIONS
```
chmod 755 /etc/init.d/memcached
chkconfig --add memcached
service memcached start
chkconfig memcached on

#8.安装Memcached扩展
cd ~/software
wget https://launchpad.net/libmemcached/1.0/1.0.4/+download/libmemcached-1.0.4.tar.gz 
tar -xzvf libmemcached-1.0.4.tar.gz  
cd libmemcached-1.0.4  
./configure  
make
make install
cd ~/software
wget http://pecl.php.net/get/memcached-2.0.1.tgz
tar vxzf memcached-2.0.1.tgz 
cd memcached-2.0.1  
phpize  
whereis libmemcached
#/usr/local/lib/
./configure --enable-memcached --with-php-config=/usr/bin/php-config
make  
make install  
#Installing shared extensions:     /usr/lib64/php/modules/
#在http://192.168.31.133/phpinfo.php查看php.ini的位置, 发现是在 /etc/php.ini
#将上面的这个目录添加到php.ini中赋值给 extension_dir
#在最后一行添加两行
vim /etc/php.ini
```
extension_dir = /usr/lib64/php/modules/
extension = memcached.so
```
service php-fpm restart
#查看phpinfo是否有memcached扩展
vim /data/www/test_memcached.php
```
<?php  
$m = new Memcached();  
$m->addServer('localhost', 11211);  
$m->set('username', 'maxwelldu');  
var_dump($m->get('username'));  
```
#访问测试 http://192.168.31.133/test_memcached.php

#9.安装phpMemcacheAdmin管理工具
#https://github.com/hgschmie/phpmemcacheadmin
cd /data/www/
git clone https://github.com/hgschmie/phpmemcacheadmin.git
#以后可以这样访问: http://192.168.31.133/phpmemcacheadmin

#10.安装Redis
#参考地址: 
#http://duchengjiu.iteye.com/blog/2224385
#http://blog.csdn.net/mlks_2008/article/details/19001595
cd ~/software
wget http://download.redis.io/releases/redis-3.0.2.tar.gz
tar zxvf redis-3.0.2.tar.gz
cd redis-3.0.2
make
cd src
make install
cp redis-server /usr/local/bin/
cp redis-cli /usr/local/bin/
mkdir /etc/redis
mkdir /var/redis
mkdir /var/redis/log
mkdir /var/redis/run
mkdir /var/redis/6379
cp ../redis.conf /etc/redis/6379.conf
#修改配置文件如下
vim /etc/redis/6379.conf
```
daemonize yes
pidfile /var/redis/run/redis_6379.pid
logfile /var/redis/log/redis_6379.log
dir /var/redis/6379
```
redis-server /etc/redis/6379.conf
#测试
redis-cli
set name maxwelldu
get name
exit
#配置成开机启动, 制作init
vim /etc/init.d/redis
```
#! /bin/sh
#
# chkconfig: - 55 45
# description:  The redis daemon is a network memory cache service.
# processname: redis
# config: /etc/redis/6379.conf

# Source function library.
PATH=/usr/local/bin:/sbin:/usr/bin:/bin

REDISPORT=6379
EXEC=/usr/local/bin/redis-server
REDIS_CLI=/usr/local/bin/redis-cli

PIDFILE=/var/redis/run/redis_6379.pid
CONF="/etc/redis/6379.conf"

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                $EXEC $CONF
        fi
        if [ "$?"="0" ]
        then
              echo "Redis is running..."
        fi
        ;;
        stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $REDIS_CLI -p $REDISPORT SHUTDOWN
                while [ -x ${PIDFILE} ]
               do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
   restart|force-reload)
        ${0} stop
        ${0} start
        ;;
  *)
    echo "Usage: /etc/init.d/redis {start|stop|restart|force-reload}" >&2
        exit 1
esac
```
chmod +x /etc/init.d/redis 
chkconfig redis on  
service redis restart
#测试
redis-cli
set foo 123
get foo
exit

#11.安装Redis扩展2.2.5
cd ~/software
git clone https://github.com/phpredis/phpredis.git
#速度慢可先翻墙
cd phpredis
phpize
./configure --with-php-config=/usr/bin/php-config
make && make install
#添加
vim /etc/php.ini
```
extension=redis.so
```
service php-fpm restart
#查看phpinfo 看redis扩展是否安装成功

#PHP操作Redis测试脚本
vim /data/www/test_redis.php
```
<?php  
$redis = new Redis();  
$redis->connect("127.0.0.1", 6379);
$redis->set('username', 'maxwelldu');  
var_dump($redis->get('username'));  
```
#访问测试 http://192.168.31.133/test_redis.php

#phpredisadmin安装
#参考地址: https://github.com/ErikDubbelboer/phpRedisAdmin
cd /data/www
git clone https://github.com/ErikDubbelboer/phpRedisAdmin.git
cd phpRedisAdmin
git clone https://github.com/nrk/predis.git vendor
#访问地址: http://192.168.31.133/phpRedisAdmin/

13.安装Mongodb
vim /etc/yum.repos.d/mongodb.repo
```
[mongodb]  
name=MongoDB Repository  
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/  
gpgcheck=0  
enabled=1 
```
yum -y install mongodb-org
service mongod start
chkconfig mongod on
#可以通过检查日志文件/var/log/mongodb/mongod.log的内容来判断mongod进程是否正常运行
#测试
mongo
show dbs;
db.version();
exit;

14.安装Mongodb扩展
cd ~/software
wget http://pecl.php.net/get/mongo-1.4.0.tgz &&  tar -zxvf mongo-1.4.0.tgz  && cd mongo-1.4.0
phpize
./configure --with-php-config=/usr/bin/php-config
make && make install
vim /etc/php.ini
```
extension=mongo.so
```
service php-fpm restart

#PHP操作Mongodb
vim /data/www/test_mongo.php
```
<?php
$connection = new Mongo("mongodb://127.0.0.1:27017");
print_r($connection->listDBs());
```
# 访问测试地址: http://192.168.31.133/test_mongo.php

#15.安装phpmoadmin管理工具
#管理工具 http://www.phpmoadmin.com/
cd ~/software
wget http://www.phpmoadmin.com/file/phpmoadmin.zip
unzip phpmoadmin.zip
mv moadmin.php /data/www/
#访问地址: http://192.168.31.133/moadmin.php

16.安装Composer
#最后通过composer安装一个yii2的高级模板看看
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer

17.安装Yii2
cd /data/www/
composer global require "fxp/composer-asset-plugin:~1.0.0"
composer create-project yiisoft/yii2-app-advanced advanced 2.0.4
#安装的时候需要输入一个github上面的token来跳过频率限制, 登录github, 访问下面的地址, 复制Head to后面的地址在浏览器上面访问
#生成一个token, 例如生成如下, 拷贝, 然后在命令行粘贴进去回车继续
#安装结束后初始化
cd advanced
./init
0
yes
#访问前台: http://192.168.31.133/advanced/frontend/web/index.php
#访问后台: http://192.168.31.133/advanced/backend/web/index.php

18.打包
rm -rf /etc/udev/rules.d/70-persistent-net.rules
exit
exit
vagrant package --output centos65lnmprmmyii2.box
#最后的压缩包在这个位置: /Users/michaeldu/Documents/vagrant/development/centos65lnmprmm.box
#到此box就制作结束了, 下面是使用

19.使用
vagrant box add --name centos65lnmprmm centos65lnmprmm.box
vagrant box --list
mkdir maxwelldu
cd maxwelldu
mkdir www
vagrant init centos65lnmprmm
vim Vagrantfile
```
config.vm.network "public_network", ip: "192.168.31.98"
 config.vm.synced_folder "./www", "/data/www/maxwelldu", create:true, owner:"vagrant", group:"vagrant"
```
vagrant up
1
vagrant ssh
sudo su -
vim /etc/nginx/conf.d/maxwelldu.io.conf
```
server {
        listen  80;
        server_name maxwelldu.io;
        index index.html index.htm index.php;
        root /data/www/maxwelldu/;
        sendfile off;
        access_log /data/log/nginx/access/index_maxwelldu.log;

        location ~ .*\.(php|php5)?$
        {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi.conf;
        }

        location / {
                if (!-e $request_filename) {
                        rewrite ^/(.*)/index.php last;
                }
        }
}
```
service nginx restart
#本地配置host, maxwelldu.io指向192.168.31.98, 然后在www目录下面写index.php脚本, 在本地就可以通过maxwelldu.io/index.php进行访问了
vim /data/www/test_memcached.php
vim /data/www/test_redis.php
vim test_mongo.php
service redis restart
service mysqld restart
#访问下面地址测试之前安装的都是否ok
http://maxwelldu.io/
http://192.168.31.98/phpinfo.php
http://192.168.31.98/phpMyAdmin/index.php?token=d7bd14b9792a25f15df17b2cc497dbcf#PMAURL-0:index.php?db=&table=&server=1&target=&token=d7bd14b9792a25f15df17b2cc497dbcf
http://192.168.31.98/test_memcached.php
http://192.168.31.98/phpmemcacheadmin/
http://192.168.31.98/test_redis.php
http://192.168.31.98/phpRedisAdmin/?overview
http://192.168.31.98/test_mongo.php
http://192.168.31.98/moadmin.php
http://192.168.31.98/advanced/frontend/web/
http://192.168.31.98/advanced/backend/web/index.php?r=site%2Flogin

#20.分享到网上
#访问https://atlas.hashicorp.com/vagrant
#点击Create a Vagrant Box With the Web UI
#写上名称, Create box, 上传本地的.box
