本地环境box制作

包含LNMP
phpmyadmin
memcache 及扩展和phpmemcacheadmin
redis及扩展和phpRedisAdmin
mongodb及扩展和moadmin

vagrant init sentos6.5

vagrant up

sudo su -

yum -y install vim gcc gcc+ gcc-c++

mysql

sudo su -
yum search mysql
yum -y install mysql mysql-devel mysql-server php-mysql
service mysqld start
/usr/bin/mysqladmin -u root password 'root'
mysql -uroot -proot
use mysql
select Host, User, Password from user;
update user set Password=password('root');
update user set Host='%' where User='root' And Host='127.0.0.1';
flush privileges;
exit;
service mysqld restart
/etc/init.d/iptables stop
chkconfig --levels 35 iptables off
chkconfig mysqld on

#切换到家目录
cd ~
vi .my.cnf
```
[mysql] 
user=root 
password=root
```

#后面直接输入以下命令就登录MySQL了, 而不需要 mysql -uroot -proot
mysql -A 


php 

yum search php
yum -y install php php-gd php-fpm php-pdo
/etc/init.d/php-fpm start
chkconfig php-fpm on
vim /etc/php-fpm.d/www.conf
user = vagrant
group = vagrant

php -v
发现php版本是5.3, 下面升级到5.4


yum remove php-common
rpm -Uvh http://repo.webtatic.com/yum/el6/latest.rpm   
yum -y install php54w php54w-fpm php54w-gd php54w-intl php54w-mbstring php54w-mcrypt php54w-mysql php54w-pdo php54w-xml php54w-xmlrpc
service php-fpm restart


nginx

yum search nginx
yum -y install nginx
vi /etc/nginx/conf.d/default.conf
```
server {
        listen  80 default;
        server_name 192.168.31.99;
        index index.html index.htm index.php;
        root /data/www;
        sendfile off;
        access_log /data/log/nginx/access/index.log;

        location ~ .*\.(php|php5)?$
        {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi.conf;
        }

        location / {
                if (!-e $request_filename) {
                        rewrite ^/(.*)/index.php last;
                }
        }
}
```

mkdir -p /data/www
mkdir -p /data/log/nginx/access
touch /data/log/nginx/access/index.log
echo 'hello html' > /data/www/index.html
service nginx start
vi /data/www/phpinfo.php
```
<?php
phpinfo();
```


chkconfig nginx on

vim /etc/php-fpm.d/www.conf
user = vagrant
group = vagrant

service php-fpm restart
chkconfig php-fpm on


phpMyAdmin 

wget --no-check-certificate https://files.phpmyadmin.net/phpMyAdmin/4.4.11/phpMyAdmin-4.4.11-all-languages.zip
yum -y install unzip
unzip phpMyAdmin-4.4.11-all-languages.zip
mv phpMyAdmin-4.4.11-all-languages phpMyAdmin
访问地址: http://192.168.31.99/phpMyAdmin

发现session不能正常开启, 查看phpinfo, 找到session位置, 修改权限, 由于phpMyAdmin需要MySQL5.5.0以上, 再升级MySQL
chown vagrant:vagrant /var/lib/php/session

下载最新的
http://dev.mysql.com/downloads/repo/yum/

yum localinstall mysql-community-release-el6-5.noarch.rpm

yum install mysql-community-server

service mysqld restart

启动的时候报错: Daemon failed to start.
rm -rf /var/lib/mysql
mysql_install_db --user=mysql --ldata=/var/lib/mysql

service mysqld restart

service php-fpm restart

可以了
参考地址:
http://blog.csdn.net/iefreer/article/details/38366575
http://blog.csdn.net/lanxe/article/details/8108614

mkdir software
cd software


memcached

yum -y install libevent-devel 
wget http://www.memcached.org/files/memcached-1.4.24.tar.gz
tar -zxvf memcached-1.4.24.tar.gz
cd memcached-1.4.24
./configure --prefix=/usr/local/memcache  
make && make install

cp scripts/memcached.sysv /etc/init.d/memcached
vim /etc/init.d/memcached

chown $USER /usr/local/memcache/bin/memcached
    daemon /usr/local/memcache/bin/memcached -d -p $PORT -u $USER  -m $CACHESIZE -c $MAXCONN -P /var/run/memcached/memcached.pid $OPTIONS


chmod 755 /etc/init.d/memcached
chkconfig --add memcached
service memcached start
chkconfig memcached on


memcache php扩展
cd ~/software
wget https://launchpad.net/libmemcached/1.0/1.0.4/+download/libmemcached-1.0.4.tar.gz 

tar -xzvf libmemcached-1.0.4.tar.gz  
cd libmemcached-1.0.4  
./configure  
make
make install


yum -y install php54w-pear
yum -y install php54w-devel

cd ~/software
wget http://pecl.php.net/get/memcached-2.0.1.tgz
tar vxzf memcached-2.0.1.tgz 
cd memcached-2.0.1  
phpize  
./configure --enable-memcached --with-php-config=/usr/local/php/bin/php-config  
make  
make install  

Installing shared extensions:     /usr/lib64/php/modules/
将上面的这个目录添加到php.ini中赋值给 extension_dir

在最后一行添加上此扩展
extension = memcached.so

service php-fpm restart
查看phpinfo是否有memcached扩展

vim /data/www/test_memcached.php
<?php  
$m = new Memcached();  
$m->addServer('localhost', 11211);  
$m->set('username', 'maxwelldu');  
var_dump($m->get('username'));  
?>  


安装phpMemcacheAdmin
https://github.com/hgschmie/phpmemcacheadmin

yum -y install git
cd /data/www/
git clone https://github.com/hgschmie/phpmemcacheadmin.git

以后可以这样访问: http://192.168.31.99/phpmemcacheadmin



redis

参考地址: 
http://duchengjiu.iteye.com/blog/2224385
http://blog.csdn.net/mlks_2008/article/details/19001595

yum -y install tcl
cd ~/software

wget http://download.redis.io/releases/redis-3.0.2.tar.gz
tar zxvf redis-3.0.2.tar.gz
cd redis-3.0.2
make

cd src
make install

cp src/redis-server /usr/local/bin/
cp src/redis-cli /usr/local/bin/

mkdir /etc/redis
mkdir /var/redis
mkdir /var/redis/log
mkdir /var/redis/run
mkdir /var/redis/6379

cp redis.conf /etc/redis/6379.conf

vim /etc/redis/6379.conf
daemonize yes
pidfile /var/redis/run/redis_6379.pid
logfile /var/redis/log/redis_6379.log
dir /var/redis/6379

redis-server /etc/redis/6379.conf

测试
redis-cli
set name maxwelldu
get name



配置成开机启动, 制作init
vim /etc/init.d/redis
```
#! /bin/sh
#
# chkconfig: - 55 45
# description:  The redis daemon is a network memory cache service.
# processname: redis
# config: /etc/redis/6379.conf

# Source function library.
PATH=/usr/local/bin:/sbin:/usr/bin:/bin

REDISPORT=6379
EXEC=/usr/local/bin/redis-server
REDIS_CLI=/usr/local/bin/redis-cli

PIDFILE=/var/redis/run/redis_6379.pid
CONF="/etc/redis/6379.conf"

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                $EXEC $CONF
        fi
        if [ "$?"="0" ]
        then
              echo "Redis is running..."
        fi
        ;;
        stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $REDIS_CLI -p $REDISPORT SHUTDOWN
                while [ -x ${PIDFILE} ]
               do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
   restart|force-reload)
        ${0} stop
        ${0} start
        ;;
  *)
    echo "Usage: /etc/init.d/redis {start|stop|restart|force-reload}" >&2
        exit 1
esac
```

chmod +x /etc/init.d/redis 
chkconfig redis on  
service redis stop
service redis start

测试
redis-cli
set foo 123
get foo


redis php扩展

cd ~/software
git clone https://github.com/phpredis/phpredis.git
速度慢可先翻墙

cd phpredis
phpize
./configure --with-php-config=/usr/bin/php-config
make && make install
vim /etc/php.ini
添加
extension=redis.so
service php-fpm restart
查看phpinfo

phpredisadmin安装
参考地址: https://github.com/ErikDubbelboer/phpRedisAdmin

cd /data/www
git clone https://github.com/ErikDubbelboer/phpRedisAdmin.git
cd phpRedisAdmin
git clone https://github.com/nrk/predis.git vendor

访问地址: http://192.168.31.99/phpRedisAdmin/


mongodb

vim /etc/yum.repos.d/mongodb.repo
[mongodb]  
name=MongoDB Repository  
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/  
gpgcheck=0  
enabled=1 


yum install mongodb-org
service mongod start
可以通过检查日志文件/var/log/mongodb/mongod.log的内容来判断mongod进程是否正常运行

chkconfig mongod on

测试
mongo
show dbs;
db.version();


mongodb php扩展
wget http://pecl.php.net/get/mongo-1.4.0.tgz &&  tar -zxvf mongo-1.4.0.tgz  && cd mongo-1.4.0
phpize
./configure --with-php-config=/usr/bin/php-config
make && make install
vim /etc/php.ini
extension=mongo.so

service php-fpm restart

参考地址: http://m.blog.csdn.net/blog/yangligao_/43740335


管理工具 http://www.phpmoadmin.com/

访问地址: http://192.168.31.99/moadmin.php


最后通过composer安装一个yii2的高级模板看看
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer

composer global require "fxp/composer-asset-plugin:~1.0.0"
composer create-project yiisoft/yii2-app-advanced advanced 2.0.4

安装的时候需要输入一个github上面的token来跳过频率限制, 访问地址: ttps://github.com/settings/tokens/new?scopes=repo&description=Composer+on+localhost.localdomain+2015-07-07+0658
生成一个token, 例如生成如下, 拷贝, 然后在命令行粘贴进去回车继续
82c1db1885ebbd9c6b4dbff93ee578ed7d32ee0a

安装结束后
cd advanced
./init
0

访问前台: http://192.168.31.99/advanced/frontend/web/index.php
访问后台: http://192.168.31.99/advanced/backend/web/index.php

准备打包
rm -rf /etc/udev/rules.d/70-persistent-net.rules
vagrant package --output sentos65lnmprmm.box

最后的压缩包在这个位置: /Users/michaeldu/Documents/vagrant/development/sentos65lnmprmm.box

到此box就制作结束了, 下面是使用

vagrant box add --name sentos65lnmprmm sentos65lnmprmm.box

vagrant box --list

mkdir sijiaomao
cd sijiaomao
mkdir www
vagrant init sentos65lnmprmm
vim Vagrantfile
config.vm.network "public_network", ip: "192.168.31.98"
 config.vm.synced_folder "./www", "/data/www/sijiaomao", create:true, owner:"vagrant", group:"vagrant"

vagrant up

cd /etc/nginx/conf.d/
cp default.conf sijiaomao.io.conf
```
server {
        listen  80;
        server_name sijiaomao.io;
        index index.html index.htm index.php;
        root /data/www/sijiaomao/;
        sendfile off;
        access_log /data/log/nginx/access/index_sijiaomao.log;

        location ~ .*\.(php|php5)?$
        {
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi.conf;
        }

        location / {
                if (!-e $request_filename) {
                        rewrite ^/(.*)/index.php last;
                }
        }
}
```

service nginx restart

本地配置host, sijiaomao.io指向192.168.31.98, 然后在www目录下面写index.php脚本, 在本地就可以通过sijiaomao.io/index.php进行访问了

